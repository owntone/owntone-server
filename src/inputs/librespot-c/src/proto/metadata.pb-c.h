/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: metadata.proto */

#ifndef PROTOBUF_C_metadata_2eproto__INCLUDED
#define PROTOBUF_C_metadata_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Spotify__Metadata__Artist Spotify__Metadata__Artist;
typedef struct Spotify__Metadata__Album Spotify__Metadata__Album;
typedef struct Spotify__Metadata__Track Spotify__Metadata__Track;
typedef struct Spotify__Metadata__ArtistWithRole Spotify__Metadata__ArtistWithRole;
typedef struct Spotify__Metadata__Show Spotify__Metadata__Show;
typedef struct Spotify__Metadata__Episode Spotify__Metadata__Episode;
typedef struct Spotify__Metadata__Licensor Spotify__Metadata__Licensor;
typedef struct Spotify__Metadata__TopTracks Spotify__Metadata__TopTracks;
typedef struct Spotify__Metadata__ActivityPeriod Spotify__Metadata__ActivityPeriod;
typedef struct Spotify__Metadata__AlbumGroup Spotify__Metadata__AlbumGroup;
typedef struct Spotify__Metadata__Date Spotify__Metadata__Date;
typedef struct Spotify__Metadata__Image Spotify__Metadata__Image;
typedef struct Spotify__Metadata__ImageGroup Spotify__Metadata__ImageGroup;
typedef struct Spotify__Metadata__Biography Spotify__Metadata__Biography;
typedef struct Spotify__Metadata__Disc Spotify__Metadata__Disc;
typedef struct Spotify__Metadata__Copyright Spotify__Metadata__Copyright;
typedef struct Spotify__Metadata__Restriction Spotify__Metadata__Restriction;
typedef struct Spotify__Metadata__Availability Spotify__Metadata__Availability;
typedef struct Spotify__Metadata__SalePeriod Spotify__Metadata__SalePeriod;
typedef struct Spotify__Metadata__ExternalId Spotify__Metadata__ExternalId;
typedef struct Spotify__Metadata__AudioFile Spotify__Metadata__AudioFile;
typedef struct Spotify__Metadata__VideoFile Spotify__Metadata__VideoFile;
typedef struct Spotify__Metadata__ContentRating Spotify__Metadata__ContentRating;


/* --- enums --- */

typedef enum _Spotify__Metadata__Album__Type {
  SPOTIFY__METADATA__ALBUM__TYPE__ALBUM = 1,
  SPOTIFY__METADATA__ALBUM__TYPE__SINGLE = 2,
  SPOTIFY__METADATA__ALBUM__TYPE__COMPILATION = 3,
  SPOTIFY__METADATA__ALBUM__TYPE__EP = 4,
  SPOTIFY__METADATA__ALBUM__TYPE__AUDIOBOOK = 5,
  SPOTIFY__METADATA__ALBUM__TYPE__PODCAST = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__ALBUM__TYPE)
} Spotify__Metadata__Album__Type;
typedef enum _Spotify__Metadata__ArtistWithRole__ArtistRole {
  SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE__ARTIST_ROLE_UNKNOWN = 0,
  SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE__ARTIST_ROLE_MAIN_ARTIST = 1,
  SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE__ARTIST_ROLE_FEATURED_ARTIST = 2,
  SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE__ARTIST_ROLE_REMIXER = 3,
  SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE__ARTIST_ROLE_ACTOR = 4,
  SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE__ARTIST_ROLE_COMPOSER = 5,
  SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE__ARTIST_ROLE_CONDUCTOR = 6,
  SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE__ARTIST_ROLE_ORCHESTRA = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE)
} Spotify__Metadata__ArtistWithRole__ArtistRole;
typedef enum _Spotify__Metadata__Show__MediaType {
  SPOTIFY__METADATA__SHOW__MEDIA_TYPE__MIXED = 0,
  SPOTIFY__METADATA__SHOW__MEDIA_TYPE__AUDIO = 1,
  SPOTIFY__METADATA__SHOW__MEDIA_TYPE__VIDEO = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__SHOW__MEDIA_TYPE)
} Spotify__Metadata__Show__MediaType;
typedef enum _Spotify__Metadata__Show__ConsumptionOrder {
  SPOTIFY__METADATA__SHOW__CONSUMPTION_ORDER__SEQUENTIAL = 1,
  SPOTIFY__METADATA__SHOW__CONSUMPTION_ORDER__EPISODIC = 2,
  SPOTIFY__METADATA__SHOW__CONSUMPTION_ORDER__RECENT = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__SHOW__CONSUMPTION_ORDER)
} Spotify__Metadata__Show__ConsumptionOrder;
typedef enum _Spotify__Metadata__Episode__EpisodeType {
  SPOTIFY__METADATA__EPISODE__EPISODE_TYPE__FULL = 0,
  SPOTIFY__METADATA__EPISODE__EPISODE_TYPE__TRAILER = 1,
  SPOTIFY__METADATA__EPISODE__EPISODE_TYPE__BONUS = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__EPISODE__EPISODE_TYPE)
} Spotify__Metadata__Episode__EpisodeType;
typedef enum _Spotify__Metadata__Image__Size {
  SPOTIFY__METADATA__IMAGE__SIZE__DEFAULT = 0,
  SPOTIFY__METADATA__IMAGE__SIZE__SMALL = 1,
  SPOTIFY__METADATA__IMAGE__SIZE__LARGE = 2,
  SPOTIFY__METADATA__IMAGE__SIZE__XLARGE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__IMAGE__SIZE)
} Spotify__Metadata__Image__Size;
typedef enum _Spotify__Metadata__Copyright__Type {
  SPOTIFY__METADATA__COPYRIGHT__TYPE__P = 0,
  SPOTIFY__METADATA__COPYRIGHT__TYPE__C = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__COPYRIGHT__TYPE)
} Spotify__Metadata__Copyright__Type;
typedef enum _Spotify__Metadata__Restriction__Catalogue {
  SPOTIFY__METADATA__RESTRICTION__CATALOGUE__AD = 0,
  SPOTIFY__METADATA__RESTRICTION__CATALOGUE__SUBSCRIPTION = 1,
  SPOTIFY__METADATA__RESTRICTION__CATALOGUE__CATALOGUE_ALL = 2,
  SPOTIFY__METADATA__RESTRICTION__CATALOGUE__SHUFFLE = 3,
  SPOTIFY__METADATA__RESTRICTION__CATALOGUE__COMMERCIAL = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__RESTRICTION__CATALOGUE)
} Spotify__Metadata__Restriction__Catalogue;
typedef enum _Spotify__Metadata__Restriction__Type {
  SPOTIFY__METADATA__RESTRICTION__TYPE__STREAMING = 0
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__RESTRICTION__TYPE)
} Spotify__Metadata__Restriction__Type;
typedef enum _Spotify__Metadata__AudioFile__Format {
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__OGG_VORBIS_96 = 0,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__OGG_VORBIS_160 = 1,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__OGG_VORBIS_320 = 2,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP3_256 = 3,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP3_320 = 4,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP3_160 = 5,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP3_96 = 6,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP3_160_ENC = 7,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__AAC_24 = 8,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__AAC_48 = 9,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP4_128 = 10,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP4_128_DUAL = 11,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP4_128_CBCS = 12,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP4_256 = 13,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP4_256_DUAL = 14,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__MP4_256_CBCS = 15,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__FLAC_FLAC = 16,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__XHE_AAC_24 = 18,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__XHE_AAC_16 = 19,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__XHE_AAC_12 = 20,
  SPOTIFY__METADATA__AUDIO_FILE__FORMAT__FLAC_FLAC_24BIT = 22
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__AUDIO_FILE__FORMAT)
} Spotify__Metadata__AudioFile__Format;

/* --- messages --- */

struct  Spotify__Metadata__Artist
{
  ProtobufCMessage base;
  protobuf_c_boolean has_gid;
  ProtobufCBinaryData gid;
  char *name;
  protobuf_c_boolean has_popularity;
  int32_t popularity;
  size_t n_top_track;
  Spotify__Metadata__TopTracks **top_track;
  size_t n_album_group;
  Spotify__Metadata__AlbumGroup **album_group;
  size_t n_single_group;
  Spotify__Metadata__AlbumGroup **single_group;
  size_t n_compilation_group;
  Spotify__Metadata__AlbumGroup **compilation_group;
  size_t n_appears_on_group;
  Spotify__Metadata__AlbumGroup **appears_on_group;
  size_t n_genre;
  char **genre;
  size_t n_external_id;
  Spotify__Metadata__ExternalId **external_id;
  size_t n_portrait;
  Spotify__Metadata__Image **portrait;
  size_t n_biography;
  Spotify__Metadata__Biography **biography;
  size_t n_activity_period;
  Spotify__Metadata__ActivityPeriod **activity_period;
  size_t n_restriction;
  Spotify__Metadata__Restriction **restriction;
  size_t n_related;
  Spotify__Metadata__Artist **related;
  protobuf_c_boolean has_is_portrait_album_cover;
  protobuf_c_boolean is_portrait_album_cover;
  Spotify__Metadata__ImageGroup *portrait_group;
  size_t n_sale_period;
  Spotify__Metadata__SalePeriod **sale_period;
  size_t n_availability;
  Spotify__Metadata__Availability **availability;
};
#define SPOTIFY__METADATA__ARTIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__artist__descriptor) \
    , 0, {0,NULL}, NULL, 0, 0, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0, 0, NULL, 0,NULL, 0,NULL }


struct  Spotify__Metadata__Album
{
  ProtobufCMessage base;
  protobuf_c_boolean has_gid;
  ProtobufCBinaryData gid;
  char *name;
  size_t n_artist;
  Spotify__Metadata__Artist **artist;
  protobuf_c_boolean has_type;
  Spotify__Metadata__Album__Type type;
  char *label;
  Spotify__Metadata__Date *date;
  protobuf_c_boolean has_popularity;
  int32_t popularity;
  size_t n_genre;
  char **genre;
  size_t n_cover;
  Spotify__Metadata__Image **cover;
  size_t n_external_id;
  Spotify__Metadata__ExternalId **external_id;
  size_t n_disc;
  Spotify__Metadata__Disc **disc;
  size_t n_review;
  char **review;
  size_t n_copyright;
  Spotify__Metadata__Copyright **copyright;
  size_t n_restriction;
  Spotify__Metadata__Restriction **restriction;
  size_t n_related;
  Spotify__Metadata__Album **related;
  size_t n_sale_period;
  Spotify__Metadata__SalePeriod **sale_period;
  Spotify__Metadata__ImageGroup *cover_group;
  char *original_title;
  char *version_title;
  char *type_str;
  size_t n_availability;
  Spotify__Metadata__Availability **availability;
};
#define SPOTIFY__METADATA__ALBUM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__album__descriptor) \
    , 0, {0,NULL}, NULL, 0,NULL, 0, SPOTIFY__METADATA__ALBUM__TYPE__ALBUM, NULL, NULL, 0, 0, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, NULL, NULL, NULL, NULL, 0,NULL }


struct  Spotify__Metadata__Track
{
  ProtobufCMessage base;
  protobuf_c_boolean has_gid;
  ProtobufCBinaryData gid;
  char *name;
  Spotify__Metadata__Album *album;
  size_t n_artist;
  Spotify__Metadata__Artist **artist;
  protobuf_c_boolean has_number;
  int32_t number;
  protobuf_c_boolean has_disc_number;
  int32_t disc_number;
  protobuf_c_boolean has_duration;
  int32_t duration;
  protobuf_c_boolean has_popularity;
  int32_t popularity;
  protobuf_c_boolean has_explicit_;
  protobuf_c_boolean explicit_;
  size_t n_external_id;
  Spotify__Metadata__ExternalId **external_id;
  size_t n_restriction;
  Spotify__Metadata__Restriction **restriction;
  size_t n_file;
  Spotify__Metadata__AudioFile **file;
  size_t n_alternative;
  Spotify__Metadata__Track **alternative;
  size_t n_sale_period;
  Spotify__Metadata__SalePeriod **sale_period;
  size_t n_preview;
  Spotify__Metadata__AudioFile **preview;
  size_t n_tags;
  char **tags;
  protobuf_c_boolean has_earliest_live_timestamp;
  int64_t earliest_live_timestamp;
  protobuf_c_boolean has_has_lyrics;
  protobuf_c_boolean has_lyrics;
  size_t n_availability;
  Spotify__Metadata__Availability **availability;
  Spotify__Metadata__Licensor *licensor;
  size_t n_language_of_performance;
  char **language_of_performance;
  size_t n_content_rating;
  Spotify__Metadata__ContentRating **content_rating;
  char *original_title;
  char *version_title;
  size_t n_artist_with_role;
  Spotify__Metadata__ArtistWithRole **artist_with_role;
};
#define SPOTIFY__METADATA__TRACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__track__descriptor) \
    , 0, {0,NULL}, NULL, NULL, 0,NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0, 0, 0, 0, 0,NULL, NULL, 0,NULL, 0,NULL, NULL, NULL, 0,NULL }


struct  Spotify__Metadata__ArtistWithRole
{
  ProtobufCMessage base;
  protobuf_c_boolean has_artist_gid;
  ProtobufCBinaryData artist_gid;
  char *artist_name;
  protobuf_c_boolean has_role;
  Spotify__Metadata__ArtistWithRole__ArtistRole role;
};
#define SPOTIFY__METADATA__ARTIST_WITH_ROLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__artist_with_role__descriptor) \
    , 0, {0,NULL}, NULL, 0, SPOTIFY__METADATA__ARTIST_WITH_ROLE__ARTIST_ROLE__ARTIST_ROLE_UNKNOWN }


struct  Spotify__Metadata__Show
{
  ProtobufCMessage base;
  protobuf_c_boolean has_gid;
  ProtobufCBinaryData gid;
  char *name;
  char *description;
  protobuf_c_boolean has_deprecated_popularity;
  int32_t deprecated_popularity;
  char *publisher;
  char *language;
  protobuf_c_boolean has_explicit_;
  protobuf_c_boolean explicit_;
  Spotify__Metadata__ImageGroup *cover_image;
  size_t n_episode;
  Spotify__Metadata__Episode **episode;
  size_t n_copyright;
  Spotify__Metadata__Copyright **copyright;
  size_t n_restriction;
  Spotify__Metadata__Restriction **restriction;
  size_t n_keyword;
  char **keyword;
  protobuf_c_boolean has_media_type;
  Spotify__Metadata__Show__MediaType media_type;
  protobuf_c_boolean has_consumption_order;
  Spotify__Metadata__Show__ConsumptionOrder consumption_order;
  size_t n_availability;
  Spotify__Metadata__Availability **availability;
  char *trailer_uri;
  protobuf_c_boolean has_music_and_talk;
  protobuf_c_boolean music_and_talk;
  protobuf_c_boolean has_is_audiobook;
  protobuf_c_boolean is_audiobook;
};
#define SPOTIFY__METADATA__SHOW__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__show__descriptor) \
    , 0, {0,NULL}, NULL, NULL, 0, 0, NULL, NULL, 0, 0, NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0, SPOTIFY__METADATA__SHOW__MEDIA_TYPE__MIXED, 0, SPOTIFY__METADATA__SHOW__CONSUMPTION_ORDER__SEQUENTIAL, 0,NULL, NULL, 0, 0, 0, 0 }


struct  Spotify__Metadata__Episode
{
  ProtobufCMessage base;
  protobuf_c_boolean has_gid;
  ProtobufCBinaryData gid;
  char *name;
  protobuf_c_boolean has_duration;
  int32_t duration;
  size_t n_audio;
  Spotify__Metadata__AudioFile **audio;
  char *description;
  protobuf_c_boolean has_number;
  int32_t number;
  Spotify__Metadata__Date *publish_time;
  protobuf_c_boolean has_deprecated_popularity;
  int32_t deprecated_popularity;
  Spotify__Metadata__ImageGroup *cover_image;
  char *language;
  protobuf_c_boolean has_explicit_;
  protobuf_c_boolean explicit_;
  Spotify__Metadata__Show *show;
  size_t n_video;
  Spotify__Metadata__VideoFile **video;
  size_t n_video_preview;
  Spotify__Metadata__VideoFile **video_preview;
  size_t n_audio_preview;
  Spotify__Metadata__AudioFile **audio_preview;
  size_t n_restriction;
  Spotify__Metadata__Restriction **restriction;
  Spotify__Metadata__ImageGroup *freeze_frame;
  size_t n_keyword;
  char **keyword;
  protobuf_c_boolean has_allow_background_playback;
  protobuf_c_boolean allow_background_playback;
  size_t n_availability;
  Spotify__Metadata__Availability **availability;
  char *external_url;
  protobuf_c_boolean has_type;
  Spotify__Metadata__Episode__EpisodeType type;
  protobuf_c_boolean has_music_and_talk;
  protobuf_c_boolean music_and_talk;
  size_t n_content_rating;
  Spotify__Metadata__ContentRating **content_rating;
  protobuf_c_boolean has_is_audiobook_chapter;
  protobuf_c_boolean is_audiobook_chapter;
};
#define SPOTIFY__METADATA__EPISODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__episode__descriptor) \
    , 0, {0,NULL}, NULL, 0, 0, 0,NULL, NULL, 0, 0, NULL, 0, 0, NULL, NULL, 0, 0, NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, NULL, 0,NULL, 0, 0, 0,NULL, NULL, 0, SPOTIFY__METADATA__EPISODE__EPISODE_TYPE__FULL, 0, 0, 0,NULL, 0, 0 }


struct  Spotify__Metadata__Licensor
{
  ProtobufCMessage base;
  protobuf_c_boolean has_uuid;
  ProtobufCBinaryData uuid;
};
#define SPOTIFY__METADATA__LICENSOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__licensor__descriptor) \
    , 0, {0,NULL} }


struct  Spotify__Metadata__TopTracks
{
  ProtobufCMessage base;
  char *country;
  size_t n_track;
  Spotify__Metadata__Track **track;
};
#define SPOTIFY__METADATA__TOP_TRACKS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__top_tracks__descriptor) \
    , NULL, 0,NULL }


struct  Spotify__Metadata__ActivityPeriod
{
  ProtobufCMessage base;
  protobuf_c_boolean has_start_year;
  int32_t start_year;
  protobuf_c_boolean has_end_year;
  int32_t end_year;
  protobuf_c_boolean has_decade;
  int32_t decade;
};
#define SPOTIFY__METADATA__ACTIVITY_PERIOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__activity_period__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  Spotify__Metadata__AlbumGroup
{
  ProtobufCMessage base;
  size_t n_album;
  Spotify__Metadata__Album **album;
};
#define SPOTIFY__METADATA__ALBUM_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__album_group__descriptor) \
    , 0,NULL }


struct  Spotify__Metadata__Date
{
  ProtobufCMessage base;
  protobuf_c_boolean has_year;
  int32_t year;
  protobuf_c_boolean has_month;
  int32_t month;
  protobuf_c_boolean has_day;
  int32_t day;
  protobuf_c_boolean has_hour;
  int32_t hour;
  protobuf_c_boolean has_minute;
  int32_t minute;
};
#define SPOTIFY__METADATA__DATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__date__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  Spotify__Metadata__Image
{
  ProtobufCMessage base;
  protobuf_c_boolean has_file_id;
  ProtobufCBinaryData file_id;
  protobuf_c_boolean has_size;
  Spotify__Metadata__Image__Size size;
  protobuf_c_boolean has_width;
  int32_t width;
  protobuf_c_boolean has_height;
  int32_t height;
};
#define SPOTIFY__METADATA__IMAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__image__descriptor) \
    , 0, {0,NULL}, 0, SPOTIFY__METADATA__IMAGE__SIZE__DEFAULT, 0, 0, 0, 0 }


struct  Spotify__Metadata__ImageGroup
{
  ProtobufCMessage base;
  size_t n_image;
  Spotify__Metadata__Image **image;
};
#define SPOTIFY__METADATA__IMAGE_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__image_group__descriptor) \
    , 0,NULL }


struct  Spotify__Metadata__Biography
{
  ProtobufCMessage base;
  char *text;
  size_t n_portrait;
  Spotify__Metadata__Image **portrait;
  size_t n_portrait_group;
  Spotify__Metadata__ImageGroup **portrait_group;
};
#define SPOTIFY__METADATA__BIOGRAPHY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__biography__descriptor) \
    , NULL, 0,NULL, 0,NULL }


struct  Spotify__Metadata__Disc
{
  ProtobufCMessage base;
  protobuf_c_boolean has_number;
  int32_t number;
  char *name;
  size_t n_track;
  Spotify__Metadata__Track **track;
};
#define SPOTIFY__METADATA__DISC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__disc__descriptor) \
    , 0, 0, NULL, 0,NULL }


struct  Spotify__Metadata__Copyright
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type;
  Spotify__Metadata__Copyright__Type type;
  char *text;
};
#define SPOTIFY__METADATA__COPYRIGHT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__copyright__descriptor) \
    , 0, SPOTIFY__METADATA__COPYRIGHT__TYPE__P, NULL }


typedef enum {
  SPOTIFY__METADATA__RESTRICTION__COUNTRY_RESTRICTION__NOT_SET = 0,
  SPOTIFY__METADATA__RESTRICTION__COUNTRY_RESTRICTION_COUNTRIES_ALLOWED = 2,
  SPOTIFY__METADATA__RESTRICTION__COUNTRY_RESTRICTION_COUNTRIES_FORBIDDEN = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTIFY__METADATA__RESTRICTION__COUNTRY_RESTRICTION__CASE)
} Spotify__Metadata__Restriction__CountryRestrictionCase;

struct  Spotify__Metadata__Restriction
{
  ProtobufCMessage base;
  size_t n_catalogue;
  Spotify__Metadata__Restriction__Catalogue *catalogue;
  protobuf_c_boolean has_type;
  Spotify__Metadata__Restriction__Type type;
  size_t n_catalogue_str;
  char **catalogue_str;
  Spotify__Metadata__Restriction__CountryRestrictionCase country_restriction_case;
  union {
    char *countries_allowed;
    char *countries_forbidden;
  };
};
#define SPOTIFY__METADATA__RESTRICTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__restriction__descriptor) \
    , 0,NULL, 0, SPOTIFY__METADATA__RESTRICTION__TYPE__STREAMING, 0,NULL, SPOTIFY__METADATA__RESTRICTION__COUNTRY_RESTRICTION__NOT_SET, {0} }


struct  Spotify__Metadata__Availability
{
  ProtobufCMessage base;
  size_t n_catalogue_str;
  char **catalogue_str;
  Spotify__Metadata__Date *start;
};
#define SPOTIFY__METADATA__AVAILABILITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__availability__descriptor) \
    , 0,NULL, NULL }


struct  Spotify__Metadata__SalePeriod
{
  ProtobufCMessage base;
  size_t n_restriction;
  Spotify__Metadata__Restriction **restriction;
  Spotify__Metadata__Date *start;
  Spotify__Metadata__Date *end;
};
#define SPOTIFY__METADATA__SALE_PERIOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__sale_period__descriptor) \
    , 0,NULL, NULL, NULL }


struct  Spotify__Metadata__ExternalId
{
  ProtobufCMessage base;
  char *type;
  char *id;
};
#define SPOTIFY__METADATA__EXTERNAL_ID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__external_id__descriptor) \
    , NULL, NULL }


struct  Spotify__Metadata__AudioFile
{
  ProtobufCMessage base;
  protobuf_c_boolean has_file_id;
  ProtobufCBinaryData file_id;
  protobuf_c_boolean has_format;
  Spotify__Metadata__AudioFile__Format format;
};
#define SPOTIFY__METADATA__AUDIO_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__audio_file__descriptor) \
    , 0, {0,NULL}, 0, SPOTIFY__METADATA__AUDIO_FILE__FORMAT__OGG_VORBIS_96 }


struct  Spotify__Metadata__VideoFile
{
  ProtobufCMessage base;
  protobuf_c_boolean has_file_id;
  ProtobufCBinaryData file_id;
};
#define SPOTIFY__METADATA__VIDEO_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__video_file__descriptor) \
    , 0, {0,NULL} }


struct  Spotify__Metadata__ContentRating
{
  ProtobufCMessage base;
  char *country;
  size_t n_tag;
  char **tag;
};
#define SPOTIFY__METADATA__CONTENT_RATING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotify__metadata__content_rating__descriptor) \
    , NULL, 0,NULL }


/* Spotify__Metadata__Artist methods */
void   spotify__metadata__artist__init
                     (Spotify__Metadata__Artist         *message);
size_t spotify__metadata__artist__get_packed_size
                     (const Spotify__Metadata__Artist   *message);
size_t spotify__metadata__artist__pack
                     (const Spotify__Metadata__Artist   *message,
                      uint8_t             *out);
size_t spotify__metadata__artist__pack_to_buffer
                     (const Spotify__Metadata__Artist   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Artist *
       spotify__metadata__artist__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__artist__free_unpacked
                     (Spotify__Metadata__Artist *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Album methods */
void   spotify__metadata__album__init
                     (Spotify__Metadata__Album         *message);
size_t spotify__metadata__album__get_packed_size
                     (const Spotify__Metadata__Album   *message);
size_t spotify__metadata__album__pack
                     (const Spotify__Metadata__Album   *message,
                      uint8_t             *out);
size_t spotify__metadata__album__pack_to_buffer
                     (const Spotify__Metadata__Album   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Album *
       spotify__metadata__album__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__album__free_unpacked
                     (Spotify__Metadata__Album *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Track methods */
void   spotify__metadata__track__init
                     (Spotify__Metadata__Track         *message);
size_t spotify__metadata__track__get_packed_size
                     (const Spotify__Metadata__Track   *message);
size_t spotify__metadata__track__pack
                     (const Spotify__Metadata__Track   *message,
                      uint8_t             *out);
size_t spotify__metadata__track__pack_to_buffer
                     (const Spotify__Metadata__Track   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Track *
       spotify__metadata__track__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__track__free_unpacked
                     (Spotify__Metadata__Track *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__ArtistWithRole methods */
void   spotify__metadata__artist_with_role__init
                     (Spotify__Metadata__ArtistWithRole         *message);
size_t spotify__metadata__artist_with_role__get_packed_size
                     (const Spotify__Metadata__ArtistWithRole   *message);
size_t spotify__metadata__artist_with_role__pack
                     (const Spotify__Metadata__ArtistWithRole   *message,
                      uint8_t             *out);
size_t spotify__metadata__artist_with_role__pack_to_buffer
                     (const Spotify__Metadata__ArtistWithRole   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__ArtistWithRole *
       spotify__metadata__artist_with_role__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__artist_with_role__free_unpacked
                     (Spotify__Metadata__ArtistWithRole *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Show methods */
void   spotify__metadata__show__init
                     (Spotify__Metadata__Show         *message);
size_t spotify__metadata__show__get_packed_size
                     (const Spotify__Metadata__Show   *message);
size_t spotify__metadata__show__pack
                     (const Spotify__Metadata__Show   *message,
                      uint8_t             *out);
size_t spotify__metadata__show__pack_to_buffer
                     (const Spotify__Metadata__Show   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Show *
       spotify__metadata__show__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__show__free_unpacked
                     (Spotify__Metadata__Show *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Episode methods */
void   spotify__metadata__episode__init
                     (Spotify__Metadata__Episode         *message);
size_t spotify__metadata__episode__get_packed_size
                     (const Spotify__Metadata__Episode   *message);
size_t spotify__metadata__episode__pack
                     (const Spotify__Metadata__Episode   *message,
                      uint8_t             *out);
size_t spotify__metadata__episode__pack_to_buffer
                     (const Spotify__Metadata__Episode   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Episode *
       spotify__metadata__episode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__episode__free_unpacked
                     (Spotify__Metadata__Episode *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Licensor methods */
void   spotify__metadata__licensor__init
                     (Spotify__Metadata__Licensor         *message);
size_t spotify__metadata__licensor__get_packed_size
                     (const Spotify__Metadata__Licensor   *message);
size_t spotify__metadata__licensor__pack
                     (const Spotify__Metadata__Licensor   *message,
                      uint8_t             *out);
size_t spotify__metadata__licensor__pack_to_buffer
                     (const Spotify__Metadata__Licensor   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Licensor *
       spotify__metadata__licensor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__licensor__free_unpacked
                     (Spotify__Metadata__Licensor *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__TopTracks methods */
void   spotify__metadata__top_tracks__init
                     (Spotify__Metadata__TopTracks         *message);
size_t spotify__metadata__top_tracks__get_packed_size
                     (const Spotify__Metadata__TopTracks   *message);
size_t spotify__metadata__top_tracks__pack
                     (const Spotify__Metadata__TopTracks   *message,
                      uint8_t             *out);
size_t spotify__metadata__top_tracks__pack_to_buffer
                     (const Spotify__Metadata__TopTracks   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__TopTracks *
       spotify__metadata__top_tracks__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__top_tracks__free_unpacked
                     (Spotify__Metadata__TopTracks *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__ActivityPeriod methods */
void   spotify__metadata__activity_period__init
                     (Spotify__Metadata__ActivityPeriod         *message);
size_t spotify__metadata__activity_period__get_packed_size
                     (const Spotify__Metadata__ActivityPeriod   *message);
size_t spotify__metadata__activity_period__pack
                     (const Spotify__Metadata__ActivityPeriod   *message,
                      uint8_t             *out);
size_t spotify__metadata__activity_period__pack_to_buffer
                     (const Spotify__Metadata__ActivityPeriod   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__ActivityPeriod *
       spotify__metadata__activity_period__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__activity_period__free_unpacked
                     (Spotify__Metadata__ActivityPeriod *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__AlbumGroup methods */
void   spotify__metadata__album_group__init
                     (Spotify__Metadata__AlbumGroup         *message);
size_t spotify__metadata__album_group__get_packed_size
                     (const Spotify__Metadata__AlbumGroup   *message);
size_t spotify__metadata__album_group__pack
                     (const Spotify__Metadata__AlbumGroup   *message,
                      uint8_t             *out);
size_t spotify__metadata__album_group__pack_to_buffer
                     (const Spotify__Metadata__AlbumGroup   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__AlbumGroup *
       spotify__metadata__album_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__album_group__free_unpacked
                     (Spotify__Metadata__AlbumGroup *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Date methods */
void   spotify__metadata__date__init
                     (Spotify__Metadata__Date         *message);
size_t spotify__metadata__date__get_packed_size
                     (const Spotify__Metadata__Date   *message);
size_t spotify__metadata__date__pack
                     (const Spotify__Metadata__Date   *message,
                      uint8_t             *out);
size_t spotify__metadata__date__pack_to_buffer
                     (const Spotify__Metadata__Date   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Date *
       spotify__metadata__date__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__date__free_unpacked
                     (Spotify__Metadata__Date *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Image methods */
void   spotify__metadata__image__init
                     (Spotify__Metadata__Image         *message);
size_t spotify__metadata__image__get_packed_size
                     (const Spotify__Metadata__Image   *message);
size_t spotify__metadata__image__pack
                     (const Spotify__Metadata__Image   *message,
                      uint8_t             *out);
size_t spotify__metadata__image__pack_to_buffer
                     (const Spotify__Metadata__Image   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Image *
       spotify__metadata__image__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__image__free_unpacked
                     (Spotify__Metadata__Image *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__ImageGroup methods */
void   spotify__metadata__image_group__init
                     (Spotify__Metadata__ImageGroup         *message);
size_t spotify__metadata__image_group__get_packed_size
                     (const Spotify__Metadata__ImageGroup   *message);
size_t spotify__metadata__image_group__pack
                     (const Spotify__Metadata__ImageGroup   *message,
                      uint8_t             *out);
size_t spotify__metadata__image_group__pack_to_buffer
                     (const Spotify__Metadata__ImageGroup   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__ImageGroup *
       spotify__metadata__image_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__image_group__free_unpacked
                     (Spotify__Metadata__ImageGroup *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Biography methods */
void   spotify__metadata__biography__init
                     (Spotify__Metadata__Biography         *message);
size_t spotify__metadata__biography__get_packed_size
                     (const Spotify__Metadata__Biography   *message);
size_t spotify__metadata__biography__pack
                     (const Spotify__Metadata__Biography   *message,
                      uint8_t             *out);
size_t spotify__metadata__biography__pack_to_buffer
                     (const Spotify__Metadata__Biography   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Biography *
       spotify__metadata__biography__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__biography__free_unpacked
                     (Spotify__Metadata__Biography *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Disc methods */
void   spotify__metadata__disc__init
                     (Spotify__Metadata__Disc         *message);
size_t spotify__metadata__disc__get_packed_size
                     (const Spotify__Metadata__Disc   *message);
size_t spotify__metadata__disc__pack
                     (const Spotify__Metadata__Disc   *message,
                      uint8_t             *out);
size_t spotify__metadata__disc__pack_to_buffer
                     (const Spotify__Metadata__Disc   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Disc *
       spotify__metadata__disc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__disc__free_unpacked
                     (Spotify__Metadata__Disc *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Copyright methods */
void   spotify__metadata__copyright__init
                     (Spotify__Metadata__Copyright         *message);
size_t spotify__metadata__copyright__get_packed_size
                     (const Spotify__Metadata__Copyright   *message);
size_t spotify__metadata__copyright__pack
                     (const Spotify__Metadata__Copyright   *message,
                      uint8_t             *out);
size_t spotify__metadata__copyright__pack_to_buffer
                     (const Spotify__Metadata__Copyright   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Copyright *
       spotify__metadata__copyright__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__copyright__free_unpacked
                     (Spotify__Metadata__Copyright *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Restriction methods */
void   spotify__metadata__restriction__init
                     (Spotify__Metadata__Restriction         *message);
size_t spotify__metadata__restriction__get_packed_size
                     (const Spotify__Metadata__Restriction   *message);
size_t spotify__metadata__restriction__pack
                     (const Spotify__Metadata__Restriction   *message,
                      uint8_t             *out);
size_t spotify__metadata__restriction__pack_to_buffer
                     (const Spotify__Metadata__Restriction   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Restriction *
       spotify__metadata__restriction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__restriction__free_unpacked
                     (Spotify__Metadata__Restriction *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__Availability methods */
void   spotify__metadata__availability__init
                     (Spotify__Metadata__Availability         *message);
size_t spotify__metadata__availability__get_packed_size
                     (const Spotify__Metadata__Availability   *message);
size_t spotify__metadata__availability__pack
                     (const Spotify__Metadata__Availability   *message,
                      uint8_t             *out);
size_t spotify__metadata__availability__pack_to_buffer
                     (const Spotify__Metadata__Availability   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__Availability *
       spotify__metadata__availability__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__availability__free_unpacked
                     (Spotify__Metadata__Availability *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__SalePeriod methods */
void   spotify__metadata__sale_period__init
                     (Spotify__Metadata__SalePeriod         *message);
size_t spotify__metadata__sale_period__get_packed_size
                     (const Spotify__Metadata__SalePeriod   *message);
size_t spotify__metadata__sale_period__pack
                     (const Spotify__Metadata__SalePeriod   *message,
                      uint8_t             *out);
size_t spotify__metadata__sale_period__pack_to_buffer
                     (const Spotify__Metadata__SalePeriod   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__SalePeriod *
       spotify__metadata__sale_period__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__sale_period__free_unpacked
                     (Spotify__Metadata__SalePeriod *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__ExternalId methods */
void   spotify__metadata__external_id__init
                     (Spotify__Metadata__ExternalId         *message);
size_t spotify__metadata__external_id__get_packed_size
                     (const Spotify__Metadata__ExternalId   *message);
size_t spotify__metadata__external_id__pack
                     (const Spotify__Metadata__ExternalId   *message,
                      uint8_t             *out);
size_t spotify__metadata__external_id__pack_to_buffer
                     (const Spotify__Metadata__ExternalId   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__ExternalId *
       spotify__metadata__external_id__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__external_id__free_unpacked
                     (Spotify__Metadata__ExternalId *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__AudioFile methods */
void   spotify__metadata__audio_file__init
                     (Spotify__Metadata__AudioFile         *message);
size_t spotify__metadata__audio_file__get_packed_size
                     (const Spotify__Metadata__AudioFile   *message);
size_t spotify__metadata__audio_file__pack
                     (const Spotify__Metadata__AudioFile   *message,
                      uint8_t             *out);
size_t spotify__metadata__audio_file__pack_to_buffer
                     (const Spotify__Metadata__AudioFile   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__AudioFile *
       spotify__metadata__audio_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__audio_file__free_unpacked
                     (Spotify__Metadata__AudioFile *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__VideoFile methods */
void   spotify__metadata__video_file__init
                     (Spotify__Metadata__VideoFile         *message);
size_t spotify__metadata__video_file__get_packed_size
                     (const Spotify__Metadata__VideoFile   *message);
size_t spotify__metadata__video_file__pack
                     (const Spotify__Metadata__VideoFile   *message,
                      uint8_t             *out);
size_t spotify__metadata__video_file__pack_to_buffer
                     (const Spotify__Metadata__VideoFile   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__VideoFile *
       spotify__metadata__video_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__video_file__free_unpacked
                     (Spotify__Metadata__VideoFile *message,
                      ProtobufCAllocator *allocator);
/* Spotify__Metadata__ContentRating methods */
void   spotify__metadata__content_rating__init
                     (Spotify__Metadata__ContentRating         *message);
size_t spotify__metadata__content_rating__get_packed_size
                     (const Spotify__Metadata__ContentRating   *message);
size_t spotify__metadata__content_rating__pack
                     (const Spotify__Metadata__ContentRating   *message,
                      uint8_t             *out);
size_t spotify__metadata__content_rating__pack_to_buffer
                     (const Spotify__Metadata__ContentRating   *message,
                      ProtobufCBuffer     *buffer);
Spotify__Metadata__ContentRating *
       spotify__metadata__content_rating__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotify__metadata__content_rating__free_unpacked
                     (Spotify__Metadata__ContentRating *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Spotify__Metadata__Artist_Closure)
                 (const Spotify__Metadata__Artist *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Album_Closure)
                 (const Spotify__Metadata__Album *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Track_Closure)
                 (const Spotify__Metadata__Track *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__ArtistWithRole_Closure)
                 (const Spotify__Metadata__ArtistWithRole *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Show_Closure)
                 (const Spotify__Metadata__Show *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Episode_Closure)
                 (const Spotify__Metadata__Episode *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Licensor_Closure)
                 (const Spotify__Metadata__Licensor *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__TopTracks_Closure)
                 (const Spotify__Metadata__TopTracks *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__ActivityPeriod_Closure)
                 (const Spotify__Metadata__ActivityPeriod *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__AlbumGroup_Closure)
                 (const Spotify__Metadata__AlbumGroup *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Date_Closure)
                 (const Spotify__Metadata__Date *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Image_Closure)
                 (const Spotify__Metadata__Image *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__ImageGroup_Closure)
                 (const Spotify__Metadata__ImageGroup *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Biography_Closure)
                 (const Spotify__Metadata__Biography *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Disc_Closure)
                 (const Spotify__Metadata__Disc *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Copyright_Closure)
                 (const Spotify__Metadata__Copyright *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Restriction_Closure)
                 (const Spotify__Metadata__Restriction *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__Availability_Closure)
                 (const Spotify__Metadata__Availability *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__SalePeriod_Closure)
                 (const Spotify__Metadata__SalePeriod *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__ExternalId_Closure)
                 (const Spotify__Metadata__ExternalId *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__AudioFile_Closure)
                 (const Spotify__Metadata__AudioFile *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__VideoFile_Closure)
                 (const Spotify__Metadata__VideoFile *message,
                  void *closure_data);
typedef void (*Spotify__Metadata__ContentRating_Closure)
                 (const Spotify__Metadata__ContentRating *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor spotify__metadata__artist__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__album__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__album__type__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__track__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__artist_with_role__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__artist_with_role__artist_role__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__show__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__show__media_type__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__show__consumption_order__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__episode__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__episode__episode_type__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__licensor__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__top_tracks__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__activity_period__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__album_group__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__date__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__image__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__image__size__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__image_group__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__biography__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__disc__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__copyright__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__copyright__type__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__restriction__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__restriction__catalogue__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__restriction__type__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__availability__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__sale_period__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__external_id__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__audio_file__descriptor;
extern const ProtobufCEnumDescriptor    spotify__metadata__audio_file__format__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__video_file__descriptor;
extern const ProtobufCMessageDescriptor spotify__metadata__content_rating__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_metadata_2eproto__INCLUDED */
